// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Payment {
  paymentId                 String           @id @default(auto()) @map("_id") @db.ObjectId
  consentId                 String
  pixId                     String
  endToEndId                String
  creationDateTime          DateTime         @default(now())
  statusUpdateDateTime      DateTime         @updatedAt
  proxy                     String
  ibgeTownCode              String
  status                    String
  date                      String
  localInstrument           String
  cnpjInitiator             String
  transactionIdentification String?
  remittanceInformation     String
  authorisationFlow         String?
  qrCode                    String?
  code                      String?
  detail                    String?
  reason                    String?
  payment                   PaymentDetail?
  creditorAccount           CreditorAccount?
  debtorAccount             DebtorAccount?
  cancellation              Cancellation?

  @@map("payment")
}

model CreditorAccount {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  ispb        String
  issuer      String
  number      String
  accountType String
  Payment     Payment @relation(fields: [paymentId], references: [paymentId], onDelete: Cascade, onUpdate: Cascade)
  paymentId   String  @unique @db.ObjectId

  @@map("creditor_accounts")
}

model DebtorAccount {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  ispb        String
  issuer      String
  number      String
  accountType String
  Payment     Payment @relation(fields: [paymentId], references: [paymentId], onDelete: Cascade, onUpdate: Cascade)
  paymentId   String  @unique @db.ObjectId

  @@map("debtor_accounts")
}

model Cancellation {
  id                        String   @id @default(auto()) @map("_id") @db.ObjectId
  reason                    String
  cancelledFrom             String
  cancelledAt               DateTime @default(now())
  cancelledByIdentification String
  cancelledByRel            String
  Payment                   Payment  @relation(fields: [paymentId], references: [paymentId], onDelete: Cascade, onUpdate: Cascade)
  paymentId                 String   @unique @db.ObjectId

  @@map("cancellations")
}

model PaymentDetail {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  amount    String
  currency  String
  Payment   Payment @relation(fields: [paymentId], references: [paymentId], onDelete: Cascade, onUpdate: Cascade)
  paymentId String  @unique @db.ObjectId
}

model AutomaticPayments {
  recurringPaymentId                    String    @id @default(auto()) @map("_id") @db.ObjectId
  recurringConsentId                    String    @unique
  endToEndId                            String
  date                                  String
  creationDateTime                      DateTime  @default(now())
  statusUpdateDateTime                  DateTime  @updatedAt
  proxy                                 String
  ibgeTownCode                          String
  status                                String
  cnpjInitiator                         String
  paymentAmount                         String
  paymentCurrency                       String
  transactionIdentification             String
  remittanceInformation                 String
  authorisationFlow                     String
  qrCode                                String?
  rejectionCode                         String?
  rejectionDetail                       String?
  cancellationReason                    String?
  cancellationCancelledFrom             String?
  cancellationCancelledAt               DateTime? @default(now())
  cancellationCancelledByIdentification String?
  cancellationCancelledByRel            String?

  @@map("automaticPayments")
}
